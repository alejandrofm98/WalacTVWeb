# Etapa Ãºnica: Dev Angular
FROM node:20-alpine

WORKDIR /app

# Copiar archivos de dependencias
COPY package*.json ./

# Instalar dependencias
RUN npm ci --legacy-peer-deps

# Copiar todo el cÃ³digo fuente
COPY . .

# ARGs que vienen de Dokploy o docker-compose
ARG API_WALACTV
ARG APP_NAME
ARG FIREBASE_API_KEY
ARG FIREBASE_AUTH_DOMAIN
ARG FIREBASE_DATABASE_URL
ARG FIREBASE_PROJECT_ID
ARG FIREBASE_STORAGE_BUCKET
ARG FIREBASE_MESSAGING_SENDER_ID
ARG FIREBASE_APP_ID
ARG ACE_STREAM_HOST

# ðŸ”§ Crear environment.ts dinÃ¡micamente para desarrollo
RUN echo "export const environment = { \
  production: false, \
  apiWalactv: '${API_WALACTV}', \
  acestreamHost: '${ACE_STREAM_HOST}', \
  appName: '${APP_NAME}', \
  firebase: { \
    apiKey: '${FIREBASE_API_KEY}', \
    authDomain: '${FIREBASE_AUTH_DOMAIN}', \
    databaseURL: '${FIREBASE_DATABASE_URL}', \
    projectId: '${FIREBASE_PROJECT_ID}', \
    storageBucket: '${FIREBASE_STORAGE_BUCKET}', \
    messagingSenderId: '${FIREBASE_MESSAGING_SENDER_ID}', \
    appId: '${FIREBASE_APP_ID}' \
  } \
};" > src/environments/environment.ts

# Exponer el puerto de ng serve
EXPOSE 4200

# CMD para desarrollo: ng serve en todas las interfaces
CMD ["npm", "run", "start", "--", "--host", "0.0.0.0", "--port", "4200"]
