# Etapa 1: Build
FROM node:20-alpine AS builder

WORKDIR /app

# Copiar archivos de dependencias desde la raíz
COPY package*.json ./

# Instalar dependencias
RUN npm ci --legacy-peer-deps

# Copiar el código fuente desde la raíz
COPY . .

# Las variables se pasan como ARG
ARG API_URL
ARG APP_NAME
ARG FIREBASE_API_KEY
ARG FIREBASE_AUTH_DOMAIN
ARG FIREBASE_DATABASE_URL
ARG FIREBASE_PROJECT_ID
ARG FIREBASE_STORAGE_BUCKET
ARG FIREBASE_MESSAGING_SENDER_ID
ARG FIREBASE_APP_ID

# Reemplazar las variables en environment.prod.ts antes del build
RUN sed -i "s|\${API_URL}|${API_URL}|g" src/environments/environment.prod.ts && \
    sed -i "s|\${APP_NAME}|${APP_NAME}|g" src/environments/environment.prod.ts && \
    sed -i "s|\${FIREBASE_API_KEY}|${FIREBASE_API_KEY}|g" src/environments/environment.prod.ts && \
    sed -i "s|\${FIREBASE_AUTH_DOMAIN}|${FIREBASE_AUTH_DOMAIN}|g" src/environments/environment.prod.ts && \
    sed -i "s|\${FIREBASE_DATABASE_URL}|${FIREBASE_DATABASE_URL}|g" src/environments/environment.prod.ts && \
    sed -i "s|\${FIREBASE_PROJECT_ID}|${FIREBASE_PROJECT_ID}|g" src/environments/environment.prod.ts && \
    sed -i "s|\${FIREBASE_STORAGE_BUCKET}|${FIREBASE_STORAGE_BUCKET}|g" src/environments/environment.prod.ts && \
    sed -i "s|\${FIREBASE_MESSAGING_SENDER_ID}|${FIREBASE_MESSAGING_SENDER_ID}|g" src/environments/environment.prod.ts && \
    sed -i "s|\${FIREBASE_APP_ID}|${FIREBASE_APP_ID}|g" src/environments/environment.prod.ts

# Build de producción
RUN npm run build -- --configuration production

# Etapa 2: Servir con Node (http-server)
FROM node:20-alpine

WORKDIR /app

# Instalar http-server para servir archivos estáticos
RUN npm install -g http-server

# Copiar los archivos compilados
COPY --from=builder /app/dist/walactvWeb/browser ./dist

EXPOSE 8080

CMD ["http-server", "./dist", "-p", "8080", "--proxy", "http://localhost:8080?"]
